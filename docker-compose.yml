services:
  frontend:
    platform: linux/arm64
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  chroma:
    platform: linux/arm64
    image: chromadb/chroma
    ports:
      - "8001:8000"  # Пробрасываем порт 8000 контейнера на 8001 хоста, чтобы избежать конфликта с backend
    volumes:
      - chroma_data:/data
    environment:
      - CHROMA_SETTINGS=default  # Если требуются дополнительные переменные окружения
    restart: unless-stopped

  backend:
    platform: linux/arm64
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - PYTHON_ENV=development
      - PYTHONPATH=/app
      - CHROMA_URL=http://chroma:8000  # Указываем URL для подключения к chroma внутри сети Docker
    depends_on:
      - redis
      - chroma

  redis:
    platform: linux/arm64
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  redis_data:
  chroma_data: